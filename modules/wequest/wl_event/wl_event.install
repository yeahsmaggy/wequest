<?php
function wl_event_install() {
  //this module is currently adding fields to the event profile to extend it instead of using the bizarre profile2 module
  //we have to be careful with adding and removing fields with this module due to losing event data
  //watchdog('wl_event', 'enable', NULL, WATCHDOG_EMERGENCY, NULL);
  //you need to include this translation function
  $t = get_t();
  //watchdog('wl_project', 'install', NULL, WATCHDOG_EMERGENCY, NULL);
  // define the type
  $type = array(
    'type' => 'event',
    'name' => $t('Event'),
    'base' => 'node_content',
    'title_label' => $t('Name of Event'),
    'custom' => FALSE,
    'locked' => TRUE
  );
  // set default values for anything not explicitly defined in the above array
//Sets the default values for a node type.
  $content_type = node_type_set_defaults($type);
  //Saves a node type to the database
  node_type_save($content_type);
  // create the content type$
$field = array(
  'translatable' => '0',
  'settings' => array(),
  'field_name' => 'field_event_registration',
  'type' => 'registration',
  'active' => '1',
  'locked' => '0',
  'cardinality' => '1',
);
field_create_field($field);

$instance = array(
  'label' => 'Event Registration',
  'widget' => array(
    'weight' => '9',
    'type' => 'registration_select',
    'active' => 0,
    'settings' => array(),
  ),
  'settings' => array(
    'default_registration_settings' => array(
      'status' => 1,
      'capacity' => '0',
      'scheduling' => array(
        'open' => '2013-07-01',
        'close' => '2013-10-01',
      ),
      'reminder' => array(
        'send_reminder' => 0,
        'reminder_settings' => array(
          'reminder_date' => '',
          'reminder_template' => '',
        ),
      ),
      'settings' => array(
        'multiple_registrations' => 0,
        'from_address' => 'admin@example.com',
      ),
    ),
    'user_register_form' => FALSE,
  ),
  'display' => array(
    'default' => array(
      'label' => 'hidden',
      'type' => 'registration_default',
      'weight' => '3',
      'settings' => array(
        'label' => ' ',
      ),
    ),
    'teaser' => array(
      'type' => 'hidden',
      'label' => 'above',
      'settings' => array(),
      'weight' => 0,
    ),
    'grid_thumbnail' => array(
      'type' => 'hidden',
      'label' => 'above',
      'settings' => array(),
      'weight' => 0,
    ),
  ),
  'required' => 0,
  'description' => '',
  'default_value' => array(
    0 => array(
      'registration_type' => '',
    ),
  ),
  'field_name' => 'field_event_registration',
  'entity_type' => 'node',
  'bundle' => 'event',
);
field_create_instance($instance);

$field = array(
  'translatable' => '0',
  'settings' => array(
    'granularity' => array(
      'month' => 'month',
      'day' => 'day',
      'hour' => 'hour',
      'minute' => 'minute',
      'year' => 'year',
      'second' => 0,
    ),
    'tz_handling' => 'user',
    'timezone_db' => 'UTC',
    'cache_enabled' => 1,
    'cache_count' => '4',
    'repeat' => '1',
    'todate' => 'optional',
  ),
  'field_name' => 'field_event_date',
  'type' => 'datetime',
  'active' => '1',
  'locked' => '0',
  'cardinality' => '-1',
);
field_create_field($field);

$instance = array(
  'label' => 'Event Date',
  'widget' => array(
    'weight' => '3',
    'type' => 'date_popup',
    'active' => 1,
    'settings' => array(
      'input_format' => 'm/d/Y - H:i:s',
      'input_format_custom' => '',
      'year_range' => '-3:+3',
      'increment' => '15',
      'label_position' => 'above',
      'text_parts' => array(),
      'display_all_day' => 0,
      'repeat_collapsed' => 1,
    ),
  ),
  'settings' => array(
    'default_value' => 'now',
    'default_value_code' => '',
    'default_value2' => 'same',
    'default_value_code2' => '',
    'user_register_form' => FALSE,
  ),
  'display' => array(
    'default' => array(
      'label' => 'hidden',
      'type' => 'date_default',
      'weight' => '2',
      'settings' => array(
        'format_type' => 'long',
        'multiple_number' => '',
        'multiple_from' => '',
        'multiple_to' => '',
        'fromto' => 'both',
        'show_repeat_rule' => 'show',
      ),
    ),
    'teaser' => array(
      'type' => 'hidden',
      'label' => 'above',
      'settings' => array(),
      'weight' => 0,
    ),
    'grid_thumbnail' => array(
      'type' => 'hidden',
      'label' => 'above',
      'settings' => array(),
      'weight' => 0,
    ),
  ),
  'required' => 0,
  'description' => '',
  'field_name' => 'field_event_date',
  'entity_type' => 'node',
  'bundle' => 'event',
);
field_create_instance($instance);

$field = array(
  'translatable' => '0',
  'settings' => array(),
  'field_name' => 'field_wl_event_description',
  'type' => 'text_long',
  'active' => '1',
  'locked' => '0',
  'cardinality' => '1',
);
field_create_field($field);

$instance = array(
  'label' => 'Event Description',
  'widget' => array(
    'weight' => '2',
    'type' => 'text_textarea',
    'active' => 1,
    'settings' => array(
      'rows' => '5',
    ),
  ),
  'settings' => array(
    'text_processing' => '0',
    'user_register_form' => FALSE,
  ),
  'display' => array(
    'default' => array(
      'label' => 'hidden',
      'type' => 'text_default',
      'weight' => '1',
      'settings' => array(),
    ),
    'teaser' => array(
      'type' => 'hidden',
      'label' => 'above',
      'settings' => array(),
      'weight' => 0,
    ),
    'grid_thumbnail' => array(
      'type' => 'hidden',
      'label' => 'above',
      'settings' => array(),
      'weight' => 0,
    ),
  ),
  'required' => 1,
  'description' => 'Write a description of the event that you would like to do.',
  'default_value' => NULL,
  'field_name' => 'field_wl_event_description',
  'entity_type' => 'node',
  'bundle' => 'event',
);
field_create_instance($instance);

$field = array(
  'translatable' => '0',
  'settings' => array(
    'uri_scheme' => 'public',
    'default_image' => 0,
  ),
  'field_name' => 'field_wl_event_image',
  'type' => 'image',
  'active' => '1',
  'locked' => '0',
  'cardinality' => '1',
);
field_create_field($field);

$instance = array(
  'label' => 'Event Image',
  'widget' => array(
    'weight' => '0',
    'type' => 'image_image',
    'active' => 1,
    'settings' => array(
      'progress_indicator' => 'throbber',
      'preview_image_style' => 'medium',
    ),
  ),
  'settings' => array(
    'file_directory' => '',
    'file_extensions' => 'png gif jpg jpeg',
    'max_filesize' => '4096',
    'max_resolution' => '1280x1024',
    'min_resolution' => '640x480',
    'alt_field' => 0,
    'title_field' => 1,
    'default_image' => 0,
    'user_register_form' => FALSE,
  ),
  'display' => array(
    'default' => array(
      'label' => 'hidden',
      'type' => 'image',
      'weight' => '0',
      'settings' => array(
        'image_style' => 'large',
        'image_link' => 'content',
      ),
    ),
    'teaser' => array(
      'type' => 'hidden',
      'label' => 'above',
      'settings' => array(),
      'weight' => 0,
    ),
    'grid_thumbnail' => array(
      'type' => 'hidden',
      'label' => 'above',
      'settings' => array(),
      'weight' => 0,
    ),
  ),
  'required' => 0,
  'description' => 'Upload an image that represents the event.',
  'field_name' => 'field_wl_event_image',
  'entity_type' => 'node',
  'bundle' => 'event',
);
field_create_instance($instance);

$field = array(
  'translatable' => '0',
  'settings' => array(),
  'field_name' => 'field_wl_event_geolocation',
  'type' => 'geolocation_latlng',
  'active' => '1',
  'locked' => '0',
  'cardinality' => '1',
);
field_create_field($field);

$instance = array(
  'label' => 'Event location',
  'widget' => array(
    'weight' => '4',
    'type' => 'geolocation_googlemap',
    'active' => 0,
    'settings' => array(),
  ),
  'settings' => array(
    'user_register_form' => FALSE,
  ),
  'display' => array(
    'default' => array(
      'label' => 'hidden',
      'type' => 'geolocation_googlemaps_static',
      'weight' => '4',
      'settings' => array(
        'map_dimensions' => '300x300',
        'marker_icon' => '',
        'map_imageformat' => 'png8',
        'map_maptype' => 'roadmap',
        'map_zoomlevel' => '14',
      ),
    ),
    'teaser' => array(
      'type' => 'hidden',
      'label' => 'above',
      'settings' => array(),
      'weight' => 0,
    ),
    'grid_thumbnail' => array(
      'type' => 'hidden',
      'label' => 'above',
      'settings' => array(),
      'weight' => 0,
    ),
  ),
  'required' => 0,
  'description' => 'If you have a location for the event, provide it here.',
  'default_value' => NULL,
  'field_name' => 'field_wl_event_geolocation',
  'entity_type' => 'node',
  'bundle' => 'event',
);
field_create_instance($instance);

$field = array(
  'translatable' => '0',
  'settings' => array(
    'target_type' => 'node',
    'handler' => 'base',
    'handler_settings' => array(
      'target_bundles' => array(
        'resource' => 'resource',
      ),
      'sort' => array(
        'type' => 'none',
      ),
      'behaviors' => array(
        'views-select-list' => array(
          'status' => 0,
        ),
      ),
    ),
  ),
  'field_name' => 'field_wl_event_acquired_resource',
  'type' => 'entityreference',
  'active' => '1',
  'locked' => '0',
  'cardinality' => '-1',
);
field_create_field($field);

$instance = array(
  'label' => 'Acquired Resources',
  'widget' => array(
    'weight' => '5',
    'type' => 'entityreference_autocomplete_tags',
    'active' => 1,
    'settings' => array(
      'match_operator' => 'CONTAINS',
      'size' => '60',
      'path' => '',
    ),
  ),
  'settings' => array(
    'user_register_form' => FALSE,
  ),
  'display' => array(
    'default' => array(
      'label' => 'above',
      'type' => 'entityreference_label',
      'weight' => '5',
      'settings' => array(
        'link' => FALSE,
      ),
    ),
    'teaser' => array(
      'type' => 'hidden',
      'label' => 'above',
      'settings' => array(),
      'weight' => 0,
    ),
    'grid_thumbnail' => array(
      'type' => 'hidden',
      'label' => 'above',
      'settings' => array(),
      'weight' => 0,
    ),
  ),
  'required' => 0,
  'description' => 'Please reference the resources here that you already have acquired for your event. You may have added them, or negotiated with another user who has provided them for the event.',
  'default_value' => NULL,
  'field_name' => 'field_wl_event_acquired_resource',
  'entity_type' => 'node',
  'bundle' => 'event',
);
field_create_instance($instance);

$field = array(
  'translatable' => '0',
  'settings' => array(
    'allowed_values' => array(
      0 => array(
        'vocabulary' => 'resources',
        'parent' => '0',
      ),
    ),
  ),
  'field_name' => 'field_wl_event_required_resource',
  'type' => 'taxonomy_term_reference',
  'active' => '1',
  'locked' => '0',
  'cardinality' => '-1',
);
field_create_field($field);

$instance = array(
  'label' => 'Required Resources',
  'widget' => array(
    'weight' => '6',
    'type' => 'taxonomy_autocomplete',
    'active' => 0,
    'settings' => array(
      'size' => 60,
      'autocomplete_path' => 'taxonomy/autocomplete',
    ),
  ),
  'settings' => array(
    'user_register_form' => FALSE,
  ),
  'display' => array(
    'default' => array(
      'label' => 'above',
      'type' => 'taxonomy_term_reference_link',
      'weight' => '6',
      'settings' => array(),
    ),
    'teaser' => array(
      'type' => 'hidden',
      'label' => 'above',
      'settings' => array(),
      'weight' => 0,
    ),
    'grid_thumbnail' => array(
      'type' => 'hidden',
      'label' => 'above',
      'settings' => array(),
      'weight' => 0,
    ),
  ),
  'required' => 0,
  'description' => 'Add tags here for the kind of resources you need so we can match resources in the system against your event. Comma separated.',
  'default_value' => NULL,
  'field_name' => 'field_wl_event_required_resource',
  'entity_type' => 'node',
  'bundle' => 'event',
);
field_create_instance($instance);

$field = array(
  'translatable' => '0',
  'settings' => array(
    'allowed_values' => array(
      0 => array(
        'vocabulary' => 'skills',
        'parent' => '0',
      ),
    ),
  ),
  'field_name' => 'field_wl_event_required_skills',
  'type' => 'taxonomy_term_reference',
  'active' => '1',
  'locked' => '0',
  'cardinality' => '-1',
);
field_create_field($field);

$instance = array(
  'label' => 'Required Skills',
  'widget' => array(
    'weight' => '8',
    'type' => 'taxonomy_autocomplete',
    'active' => 0,
    'settings' => array(
      'size' => 60,
      'autocomplete_path' => 'taxonomy/autocomplete',
    ),
  ),
  'settings' => array(
    'user_register_form' => FALSE,
  ),
  'display' => array(
    'default' => array(
      'label' => 'above',
      'type' => 'taxonomy_term_reference_link',
      'weight' => '8',
      'settings' => array(),
    ),
    'teaser' => array(
      'type' => 'hidden',
      'label' => 'above',
      'settings' => array(),
      'weight' => 0,
    ),
    'grid_thumbnail' => array(
      'type' => 'hidden',
      'label' => 'above',
      'settings' => array(),
      'weight' => 0,
    ),
  ),
  'required' => 0,
  'description' => 'Please add tags for the skills that you need for your event and we will match them against available skills in the system. Comma separated.',
  'default_value' => NULL,
  'field_name' => 'field_wl_event_required_skills',
  'entity_type' => 'node',
  'bundle' => 'event',
);
field_create_instance($instance);

$field = array(
  'translatable' => '0',
  'settings' => array(
    'target_type' => 'node',
    'handler' => 'base',
    'handler_settings' => array(
      'target_bundles' => array(
        'skill' => 'skill',
      ),
      'sort' => array(
        'type' => 'none',
      ),
      'behaviors' => array(
        'views-select-list' => array(
          'status' => 0,
        ),
      ),
    ),
  ),
  'field_name' => 'field_wl_event_acquired_skills',
  'type' => 'entityreference',
  'active' => '1',
  'locked' => '0',
  'cardinality' => '1',
);
field_create_field($field);

$instance = array(
  'label' => 'Acquired Skills',
  'widget' => array(
    'weight' => '7',
    'type' => 'entityreference_autocomplete_tags',
    'active' => 1,
    'settings' => array(
      'match_operator' => 'CONTAINS',
      'size' => '60',
      'path' => '',
    ),
  ),
  'settings' => array(
    'user_register_form' => FALSE,
  ),
  'display' => array(
    'default' => array(
      'label' => 'above',
      'type' => 'entityreference_label',
      'weight' => '7',
      'settings' => array(
        'link' => FALSE,
      ),
    ),
    'teaser' => array(
      'type' => 'hidden',
      'label' => 'above',
      'settings' => array(),
      'weight' => 0,
    ),
    'grid_thumbnail' => array(
      'type' => 'hidden',
      'label' => 'above',
      'settings' => array(),
      'weight' => 0,
    ),
  ),
  'required' => 0,
  'description' => 'Please add skills here that you have acquired for the event or have been donated by a user added to the event.',
  'default_value' => NULL,
  'field_name' => 'field_wl_event_acquired_skills',
  'entity_type' => 'node',
  'bundle' => 'event',
);
field_create_instance($instance);

$field = array(
  'translatable' => '0',
  'settings' => array(
    'allowed_values' => array(
      'Private ' => ' Private',
      'Public ' => ' Public',
    ),
    'allowed_values_function' => '',
  ),
  'field_name' => 'field_wl_event_privacy',
  'type' => 'list_text',
  'active' => '1',
  'locked' => '0',
  'cardinality' => '1',
);
field_create_field($field);

$instance = array(
  'label' => 'Event Privacy',
  'widget' => array(
    'weight' => '12',
    'type' => 'options_select',
    'active' => 1,
    'settings' => array(),
  ),
  'settings' => array(
    'user_register_form' => FALSE,
  ),
  'display' => array(
    'default' => array(
      'label' => 'hidden',
      'type' => 'list_default',
      'weight' => '9',
      'settings' => array(),
    ),
    'teaser' => array(
      'type' => 'hidden',
      'label' => 'above',
      'settings' => array(),
      'weight' => 0,
    ),
    'grid_thumbnail' => array(
      'type' => 'hidden',
      'label' => 'above',
      'settings' => array(),
      'weight' => 0,
    ),
  ),
  'required' => 0,
  'description' => 'Is this a private or public event?',
  'default_value' => NULL,
  'field_name' => 'field_wl_event_privacy',
  'entity_type' => 'node',
  'bundle' => 'event',
);
field_create_instance($instance);


}
function wl_event_uninstall() {
  $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
  $result = db_query($sql, array(
    ':type' => 'wl_event'
  ));
  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }
  node_delete_multiple($nids);
  //Retrieves information about field instances
  $instances = field_info_instances('node', 'event');
  //Marks a field and its instances and data for deletion.
  foreach ($instances as $instance) {
    field_delete_field($instance);
  }
  //Deletes a node type from the database.
  node_type_delete('event');
  // delete the content type
  variable_del('node_preview_event');
  //delete more vairables
//Updates the database cache of node types.
  node_types_rebuild();
  // rebuild the menus
  menu_rebuild();
  // Purge all field information
  // http://api.drupal.org/api/function/field_purge_batch/7
  field_purge_batch(1000);
}
