<?php
/**
 * Implements hook_install().
 */
function wl_skill_install() {
  //you need to include this translation function
  $t = get_t();
  //watchdog('wl_skill', 'install', NULL, WATCHDOG_EMERGENCY, NULL);
  // define the type
  $type = array(
    'type' => 'skill',
    'name' => $t('Skill'),
    'base' => 'node_content',
    'title_label' => $t('Name of Skill'),
    'custom' => FALSE,
    'locked' => TRUE
  );
  // set default values for anything not explicitly defined in the above array
  $content_type = node_type_set_defaults($type);
  // add the body field to the content type
  //node_add_body_field($content_type, 'Body');
  // create the content type
  node_type_save($content_type);

$field = array(
  'translatable' => '0',
  'settings' => array(
    'uri_scheme' => 'public',
    'default_image' => 0,
  ),
  'field_name' => 'field_wl_skill_image',
  'type' => 'image',
  'active' => '1',
  'locked' => '0',
  'cardinality' => '3',
);
field_create_field($field);

$instance = array(
  'label' => 'Skill Image',
  'widget' => array(
    'weight' => '1',
    'type' => 'image_image',
    'active' => 1,
    'settings' => array(
      'progress_indicator' => 'throbber',
      'preview_image_style' => 'medium',
    ),
  ),
  'settings' => array(
    'file_directory' => '',
    'file_extensions' => 'png gif jpg jpeg',
    'max_filesize' => '4096',
    'max_resolution' => '1280x1024',
    'min_resolution' => '640x480',
    'alt_field' => 0,
    'title_field' => 1,
    'default_image' => 0,
    'user_register_form' => FALSE,
  ),
  'display' => array(
    'default' => array(
      'label' => 'hidden',
      'type' => 'image',
      'weight' => '5',
      'settings' => array(
        'image_style' => 'medium',
        'image_link' => 'content',
      ),
    ),
    'teaser' => array(
      'type' => 'hidden',
      'label' => 'above',
      'settings' => array(),
      'weight' => 0,
    ),
    'grid_thumbnail' => array(
      'type' => 'hidden',
      'label' => 'above',
      'settings' => array(),
      'weight' => 0,
    ),
    'event_resource_listing' => array(
      'type' => 'hidden',
      'label' => 'above',
      'settings' => array(),
      'weight' => 0,
    ),
  ),
  'required' => 0,
  'description' => 'Please upload an image that helps to describe the skill you are adding.',
  'field_name' => 'field_wl_skill_image',
  'entity_type' => 'node',
  'bundle' => 'skill',
);
field_create_instance($instance);

$field = array(
  'translatable' => '0',
  'settings' => array(),
  'field_name' => 'field_wl_skill_description',
  'type' => 'text_long',
  'active' => '1',
  'locked' => '0',
  'cardinality' => '1',
);
field_create_field($field);

$instance = array(
  'label' => 'Skill Description',
  'widget' => array(
    'weight' => '2',
    'type' => 'text_textarea',
    'active' => 1,
    'settings' => array(
      'rows' => '5',
    ),
  ),
  'settings' => array(
    'text_processing' => '0',
    'user_register_form' => FALSE,
  ),
  'display' => array(
    'default' => array(
      'label' => 'hidden',
      'type' => 'text_default',
      'weight' => '6',
      'settings' => array(),
    ),
    'teaser' => array(
      'type' => 'hidden',
      'label' => 'above',
      'settings' => array(),
      'weight' => 0,
    ),
    'grid_thumbnail' => array(
      'type' => 'hidden',
      'label' => 'above',
      'settings' => array(),
      'weight' => 0,
    ),
    'event_resource_listing' => array(
      'type' => 'hidden',
      'label' => 'above',
      'settings' => array(),
      'weight' => 0,
    ),
  ),
  'required' => 0,
  'description' => 'Please enter a description of the skill.',
  'default_value' => NULL,
  'field_name' => 'field_wl_skill_description',
  'entity_type' => 'node',
  'bundle' => 'skill',
);
field_create_instance($instance);

$field = array(
  'translatable' => '0',
  'settings' => array(
    'allowed_values' => array(
      'Beginner ' => ' Beginner',
      'Intermediate ' => ' Intermediate',
      'Expert ' => ' Expert',
    ),
    'allowed_values_function' => '',
  ),
  'field_name' => 'field_wl_skill_level',
  'type' => 'list_text',
  'active' => '1',
  'locked' => '0',
  'cardinality' => '1',
);
field_create_field($field);

$instance = array(
  'label' => 'Skill Level',
  'widget' => array(
    'weight' => '3',
    'type' => 'options_select',
    'active' => 1,
    'settings' => array(),
  ),
  'settings' => array(
    'user_register_form' => FALSE,
  ),
  'display' => array(
    'default' => array(
      'label' => 'above',
      'type' => 'list_default',
      'weight' => '7',
      'settings' => array(),
    ),
    'teaser' => array(
      'type' => 'hidden',
      'label' => 'above',
      'settings' => array(),
      'weight' => 0,
    ),
    'grid_thumbnail' => array(
      'type' => 'hidden',
      'label' => 'above',
      'settings' => array(),
      'weight' => 0,
    ),
    'event_resource_listing' => array(
      'type' => 'hidden',
      'label' => 'above',
      'settings' => array(),
      'weight' => 0,
    ),
  ),
  'required' => 0,
  'description' => '',
  'default_value' => NULL,
  'field_name' => 'field_wl_skill_level',
  'entity_type' => 'node',
  'bundle' => 'skill',
);
field_create_instance($instance);

$field = array(
  'translatable' => '0',
  'settings' => array(
    'allowed_values' => array(
      0 => array(
        'vocabulary' => 'skills',
        'parent' => '0',
      ),
    ),
  ),
  'field_name' => 'field_wl_skill_tags',
  'type' => 'taxonomy_term_reference',
  'active' => '1',
  'locked' => '0',
  'cardinality' => '-1',
);
field_create_field($field);

$instance = array(
  'label' => 'Skill Tags',
  'widget' => array(
    'weight' => '4',
    'type' => 'taxonomy_autocomplete',
    'active' => 0,
    'settings' => array(
      'size' => 60,
      'autocomplete_path' => 'taxonomy/autocomplete',
    ),
  ),
  'settings' => array(
    'user_register_form' => FALSE,
  ),
  'display' => array(
    'default' => array(
      'label' => 'hidden',
      'type' => 'taxonomy_term_reference_link',
      'weight' => '8',
      'settings' => array(),
    ),
    'teaser' => array(
      'type' => 'hidden',
      'label' => 'above',
      'settings' => array(),
      'weight' => 0,
    ),
    'grid_thumbnail' => array(
      'type' => 'hidden',
      'label' => 'above',
      'settings' => array(),
      'weight' => 0,
    ),
    'event_resource_listing' => array(
      'type' => 'hidden',
      'label' => 'above',
      'settings' => array(),
      'weight' => 0,
    ),
  ),
  'required' => 0,
  'description' => 'Please add some tags that describe the category of skill that you are adding.',
  'default_value' => NULL,
  'field_name' => 'field_wl_skill_tags',
  'entity_type' => 'node',
  'bundle' => 'skill',
);
field_create_instance($instance);

taxonomy_vocabulary_save((object) array(
  'name' => 'Skills',
  'machine_name' => 'skills',
));

//Creating a hierarchical vocabulary
// // Create the vocabulary.
// taxonomy_vocabulary_save((object) array(
//   'name' => 'Event Type',
//   'machine_name' => 'event_type',
// ));

// // Get the vocabulary ID.
// $vid = db_query("SELECT vid FROM {taxonomy_vocabulary} WHERE machine_name = 'event_type'")->fetchField();

// // Define the terms.
// $terms['Group 1'][] = 'Some term 1';
// $terms['Group 1'][] = 'Some term 2';
// $terms['Group 1'][] = 'Some term 3';
// $terms['Group 2'][] = 'Another term 1';
// $terms['Group 2'][] = 'Another term 2';

// foreach ($terms as $parent => $children) {

//   // Create the parent term.
//   taxonomy_term_save((object) array(
//     'name' => $parent,
//     'vid' => $vid,
//   ));

//   // Get the parent term's ID.
//   $tid = db_query("SELECT tid FROM {taxonomy_term_data} WHERE vid = :vid ORDER BY tid DESC LIMIT 1", array(
//     ':vid' => $vid,
//   ))->fetchField();

//   foreach ($children as $term) {
//     // Create the child term.
//     taxonomy_term_save((object) array(
//       'name' => $term,
//       'vid' => $vid,
//       'parent' => array($tid),
//     ));
//   }
// }


}

function wl_skill_uninstall() {
  //uninstall the module
  //watchdog('wl_skill', 'uninstall', NULL, WATCHDOG_EMERGENCY, NULL);
  // Gather all the example content that might have been created while this
  // module was enabled.  Simple selects still use db_query().
  // http://api.drupal.org/api/function/db_query/7
  $sql = 'SELECT nid FROM {node} n WHERE n.type = :type';
  $result = db_query($sql, array(
    ':type' => 'wl_skill'
  ));
  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }
  node_delete_multiple($nids);
  // foreach (array_keys(_wl_skill_fields()) as $field) {
  //   field_delete_field($field);
  // }
  foreach (array_keys(_wl_skill_vocabularies()) as $vocabulary) {
    foreach ($vocabulary['terms'] as $term) {
      taxonomy_term_delete($termid);
    }
    taxonomy_vocabulary_delete($vocabulary->vid);
  }
  node_type_delete('skill');
  // Purge all field information
  // http://api.drupal.org/api/function/field_purge_batch/7
  field_purge_batch(1000);
}
/**
 * Create and optionally populate a vocabulary
 */
function _wl_skill_create_vocabulary($vocabulary) {
  // Skip if vocabulary already exists
  if (taxonomy_vocabulary_machine_name_load($vocabulary['machine_name'])) {
    return true;
  }
  taxonomy_vocabulary_save((object) array(
    'name' => $vocabulary['name'],
    'machine_name' => $vocabulary['machine_name'],
    'module' => $vocabulary['module'],
    'namespace' => $vocabulary['namespace']
  ));
  $new_vocabulary = taxonomy_vocabulary_machine_name_load($vocabulary['machine_name']);
  foreach ($vocabulary['terms'] as $term) {
    taxonomy_term_save((object) array(
      'name' => $term,
      'vid' => $new_vocabulary->vid,
      'namespace' => $vocabulary['namespace']
    ));
  }
  return true;
}
