// No bullets
@mixin no-bullets {
  list-style: none;
  margin: 0;
  padding: 0;
  li {
    @include no-bullet;
  }
}

// Replace text with an image
@mixin replace-text-with-dimensions($img, $x: 50%, $y: 50%, $inline: false) {
  @include replace-text(if($inline, inline-image($img), $img), $x, $y);
  width: image-width($img);
  height: image-height($img);
}

// Gradients
@mixin horizontal-gradient-two($left, $right) { 
	background-color: $left; // Ultimate fallback
	@include filter-gradient($left, $right, horizontal); // IE6-9
	@include background-image(linear-gradient(left, $left 0%,$right 100%));
  background: linear-gradient(to right, $left, $right);
}

@mixin horizontal-gradient-three($one, $two, $three) { 
	background-color: $one; // Ultimate fallback
	@include filter-gradient($one, $three, horizontal); // IE6-9
	@include background-image(linear-gradient(left, $one 0%,$two 50%,$three 100%));
  background: linear-gradient(to right, $one, $two, $three);
}

@mixin horizontal-gradient-four($one, $two, $three, $four) { 
	background-color: $one; // Ultimate fallback
	@include filter-gradient($one, $four, horizontal); // IE6-9
	@include background-image(linear-gradient(left, $one 0%,$two 33%,$three 66%,$four 100%));
  background: linear-gradient(to right, $one, $two, $three, $four);
}

@mixin vertical-gradient-two($top, $bottom) { 
	background-color: $top; // Ultimate fallback
	@include filter-gradient($top, $bottom, vertical); // IE6-9
	@include background-image(linear-gradient(top, $top 0%,$bottom 100%));
  background: linear-gradient(to bottom, $top, $bottom);
}

// Defined Gradients
@mixin pink-to-yellow-horizontal-gradient {
	@include horizontal-gradient-two($bright-pink, $bright-yellow);
}

@mixin blue-to-pink-horizontal-gradient {
	@include horizontal-gradient-two($blue, $bright-pink);
}

@mixin blue-to-green-to-yellow-horizontal-gradient {
	@include horizontal-gradient-three($bright-blue, $green, $bright-yellow);
}

@mixin purple-to-offpurple-horizontal-gradient {
	@include horizontal-gradient-two($purple, $off-purple);
}

@mixin deeppurple-to-purple-horizontal-gradient {
	@include horizontal-gradient-two($deep-purple, $purple);
}

@mixin palepurple-to-deeppurple-horizontal-gradient {
	@include horizontal-gradient-two($pale-purple, $deep-purple);
}

@mixin green-to-yellow-horizontal-gradient {
  @include horizontal-gradient-two($bright-green, $yellow);
}

// Dotted bottom border
@mixin dotted-bottom-border($size, $color) {
	border-bottom: $size dotted $color;
}

@mixin border-bottom($size: 1px, $type: solid, $color: #000) {
	border-bottom: $size $type $color;
}

// Font size
@mixin font-size($font-size: 14) {
	font-size: #{$font-size}px;
	font-size: #{$font-size / 10}rem;
}

@mixin font-size-em($font-size) {
	font-size: #{$font-size / 14}em; // Where 14 is the base font size
}

// Font stacks
@mixin font-stack-futura-bold-oblique {
	font-family: $futura-bold-oblique;
	font-weight: normal;
	text-transform: uppercase;
}

@mixin font-stack-futura-medium-uppercase {
	font-family: $futura-medium;
	font-weight: normal;
	text-transform: uppercase;
}

@mixin font-stack-mtv-pharma-bold-condensed {
  font-family: $mtv-pharma-bold-condensed;
  font-weight: normal;
  text-transform: uppercase;
}

@mixin font-stack-arial-black {
	font-family: "Arial Black", Arial, Helvetica, sans-serif;
  font-weight:bold;
}

@mixin font-stack-arial-bold {
	font-family: Arial, Helvetica, sans-serif;
	font-weight: bold;
}

// Box sizing
@mixin box-sizing($boxsize: border-box) {
	-webkit-box-sizing : $boxsize;
	-moz-box-sizing : $boxsize;
	-ms-box-sizing : $boxsize;
	box-sizing : $boxsize;
}

// Clearfix - Or add Drupal's built in .clearfix class to an element
@mixin clearfix {
	*zoom : 1;
	&:before,
	&:after {
		display: table;
		content : "";
	}
	&:after {
		clear : both;
	}
}

// Playlist
@mixin video-title {
	@include font-size-em(14);
	float: left;
	font-weight: bold;
	line-height: 1;
	color: $colour-video-main;
}

@mixin video-artist {
	@include font-size-em(13);
	color: $colour-video-secondary;
	float: left;
	line-height: 1;
}

@mixin triangle($direction, $color, $size) {

        @if $direction == "left" {
                border-bottom: $size solid transparent;
                border-right: $size solid $color;
                border-top: $size solid transparent;
        }
        @else if $direction == "right" {
                border-bottom: $size solid transparent;
                border-left: $size solid $color;
                border-top: $size solid transparent;
        }
        @else if $direction == "up" {
                border-bottom: $size solid $color;
                border-left: $size solid transparent;
                border-right: $size solid transparent;
        }
        @else if $direction == "down" {
                border-right: $size solid transparent;
                border-left: $size solid transparent;
                border-top: $size solid $color;
        }

        height: 0;
        width: 0;
}  

